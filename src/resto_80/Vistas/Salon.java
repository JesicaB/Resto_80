package resto_80.Vistas;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDateTime;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import resto_80.Datos.EmpleadoD;
import resto_80.Datos.MesaD;
import resto_80.Datos.PedidoD;
import resto_80.Datos.ProductoD;
import resto_80.Datos.ProductoPedidoD;
import resto_80.Entidades.Empleado;
import resto_80.Entidades.Mesa;
import resto_80.Entidades.Pedido;
import resto_80.Entidades.Producto;
import resto_80.Entidades.ProductoPedido;

public class Salon extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo = new DefaultTableModel() {

        public boolean isCellEditable(int f, int c) {

            if (c == 1) {

                return true;
            } else {
                return false;
            }
        }

    };

    int npedido;

    public Salon() {

        initComponents();
        panel2.setVisible(false);
        cargarMesas();
        armarCabecera();
        cargarMeseros();
        cargarProductos();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new javax.swing.JPanel();
        panel2 = new javax.swing.JPanel();
        camarero = new javax.swing.JComboBox<>();
        productos = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cantidad = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        cargarProd = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        jLabel45 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        total = new javax.swing.JTextField();
        jBguardar = new javax.swing.JButton();
        nmesa = new javax.swing.JLabel();
        jBNuePedido = new javax.swing.JButton();
        jBcobrar = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setMaximizable(true);

        panel1.setBackground(new java.awt.Color(51, 255, 204));
        panel1.setDoubleBuffered(false);
        panel1.setLayout(new java.awt.GridLayout(3, 0));

        camarero.setEnabled(false);

        productos.setEnabled(false);

        jLabel1.setText("Camarero");
        jLabel1.setEnabled(false);

        jLabel3.setText("Productos");
        jLabel3.setEnabled(false);

        jLabel4.setText("Cantidad");
        jLabel4.setEnabled(false);

        cantidad.setEnabled(false);

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla.setEnabled(false);
        tabla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tablaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        cargarProd.setText("Cargar Producto");
        cargarProd.setEnabled(false);
        cargarProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarProdActionPerformed(evt);
            }
        });

        eliminar.setText("Eliminar Producto");
        eliminar.setEnabled(false);
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        jLabel45.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        jLabel45.setText("MESA");

        jLabel5.setText("Total:");
        jLabel5.setEnabled(false);

        total.setEditable(false);
        total.setText("$");
        total.setEnabled(false);

        jBguardar.setText("GUARDAR");
        jBguardar.setEnabled(false);
        jBguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBguardarActionPerformed(evt);
            }
        });

        nmesa.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        nmesa.setText("NÂ°");

        jBNuePedido.setText("NUEVO PEDIDO");
        jBNuePedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNuePedidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addComponent(cargarProd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                                .addComponent(eliminar))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cantidad, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(productos, javax.swing.GroupLayout.Alignment.LEADING, 0, 290, Short.MAX_VALUE)
                                .addComponent(camarero, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addComponent(jLabel45)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nmesa, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addGap(146, 146, 146)
                                .addComponent(jBguardar))
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(jBNuePedido, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nmesa, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBNuePedido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(camarero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(productos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cargarProd)
                    .addComponent(eliminar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jBguardar)
                .addContainerGap())
        );

        jBcobrar.setText("COBRAR");
        jBcobrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcobrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jBcobrar, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(panel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBcobrar)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cargarProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarProdActionPerformed
        try {
            ProductoD pD = new ProductoD();

            Producto p = (pD.buscarProductoxNombre(productos.getSelectedItem() + ""));

            int filas = tabla.getRowCount() - 1;
            int rep = 0;

                for (int i = 0; i <= filas; i++) {

                    if (productos.getSelectedItem().toString().equalsIgnoreCase(tabla.getValueAt(i, 0)+"")) {

                        rep++;
                    }
                }

                if (rep > 1) {

                    JOptionPane.showMessageDialog(null, "Producto ya solicitado, modifique las cantidades desde la tabla.");
                    cantidad.setText("");
                } else {

                    String n = p.getNombre();
                    int c = Integer.parseInt(cantidad.getText());
                    double precio = c * p.getPrecio();

                    modelo.addRow(new Object[]{n, c, c * p.getPrecio()});

                    double subtotal = 0;
                    for (int j = 0; j <= filas; j++) {

                        subtotal = subtotal + (Double.parseDouble(tabla.getValueAt(j, 2).toString()));

                    }
                total.setText(subtotal + "");

                cantidad.setText("");
                }
        }catch(NumberFormatException ex){
           
           if(cantidad.getText().equalsIgnoreCase("")){
           JOptionPane.showMessageDialog(null, "Debe ingresar la cantidad de productos solicitados");
           }else{
               JOptionPane.showMessageDialog(null, "Ingrese solo numeros");
           }
           
       
        }
        
    }//GEN-LAST:event_cargarProdActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        try {
            modelo.removeRow(tabla.getSelectedRow());
            int filas = tabla.getRowCount() - 1;
            double subtotal = 0;
            for (int i = 0; i <= filas; i++) {

                subtotal = subtotal + (Double.parseDouble(tabla.getValueAt(i, 2).toString()));

            }
            total.setText(subtotal + "");
        } catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(null, "No hay productos para eliminar");
        }


    }//GEN-LAST:event_eliminarActionPerformed

    private void jBguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBguardarActionPerformed
        try{
        Empleado emp=new Empleado();
        EmpleadoD empD=new EmpleadoD();
        PedidoD pedD = new PedidoD();
        Pedido ped = pedD.buscarPedido(npedido);
        ProductoD pD = new ProductoD();
        ProductoPedido pp = new ProductoPedido();
        ProductoPedidoD ppD = new ProductoPedidoD();
        int filas = tabla.getRowCount() - 1;
        for (int i = 0; i <= filas; i++) {

            Producto p = pD.buscarProductoxNombre(tabla.getValueAt(i, 0) + "");

            pp.setProducto(p);
            pp.setCantidad(Integer.parseInt(tabla.getValueAt(i, 1) + ""));
            pp.setSubtotal(Double.parseDouble(tabla.getValueAt(i, 2) + ""));
            pp.setPedido(ped);

            ppD.cargarPP(pp);
        }

        ped.setMesero(empD.buscarEmpleadoNombre(camarero.getSelectedItem()+""));
        ped.setImporte(Double.parseDouble(total.getText()+""));
        
        pedD.modificarPedido(ped);
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Debe agregar un producto");
            
        } 
         
        
        camarero.setEnabled(false);
        cantidad.setText("");
        cantidad.setEnabled(false);
        productos.setEnabled(false);
        borrarTabla();
        tabla.setEnabled(false);
        total.setEnabled(false);
        total.setText("");
        jLabel1.setEnabled(false);
        jLabel3.setEnabled(false);
        jLabel4.setEnabled(false);
        jLabel5.setEnabled(false);
        cargarProd.setEnabled(false);
        eliminar.setEnabled(false);
        jBguardar.setEnabled(false);
        
            
        
        panel2.setVisible(false);


    }//GEN-LAST:event_jBguardarActionPerformed

    private void jBNuePedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNuePedidoActionPerformed

        camarero.setEnabled(true);
        cantidad.setEnabled(true);
        productos.setEnabled(true);
        total.setEnabled(true);
        jLabel1.setEnabled(true);
        jLabel3.setEnabled(true);
        jLabel4.setEnabled(true);
        jLabel5.setEnabled(true);
        cargarProd.setEnabled(true);
        eliminar.setEnabled(true);
        jBguardar.setEnabled(true);

        PedidoD peD = new PedidoD();
        EmpleadoD empD = new EmpleadoD();
        MesaD mesaD = new MesaD();

        Pedido ped = new Pedido();

        ped.setMesa(mesaD.buscarMesaXNumero(Integer.parseInt(nmesa.getText())));
        ped.setMesero(empD.buscarEmpleadoNombre(camarero.getSelectedItem() + ""));
        ped.setF_H(LocalDateTime.now());
        ped.setEstado(false);
        ped.setImporte(0);
        peD.agregarPedido(ped);

        npedido = ped.getIdPedido();


    }//GEN-LAST:event_jBNuePedidoActionPerformed

    private void tablaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaKeyReleased
        try {
            ProductoD pD = new ProductoD();

            int fila = tabla.getSelectedRow();

            Producto p = (pD.buscarProductoxNombre(tabla.getValueAt(fila, 0) + ""));

            int c = Integer.parseInt(tabla.getValueAt(fila, 1).toString());

            tabla.setValueAt(c * p.getPrecio(), fila, 2);

            int filas = tabla.getRowCount() - 1;
            double subtotal = 0;
            for (int i = 0; i <= filas; i++) {

                subtotal = subtotal + (Double.parseDouble(tabla.getValueAt(i, 2).toString()));

            }
            total.setText(subtotal + "");

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Ingrese solo numeros");
        }
    }//GEN-LAST:event_tablaKeyReleased

    private void jBcobrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcobrarActionPerformed

        panel2.setVisible(false);
        panel2.setEnabled(false);
        panel1.setVisible(false);
        panel1.setEnabled(false);
       jBcobrar.setVisible(false);
       jBcobrar.setEnabled(false);
       Facturacion fac= new Facturacion();
       fac.setVisible(true);
       this.add(fac);
       this.moveToFront();
       
       
    }//GEN-LAST:event_jBcobrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> camarero;
    private javax.swing.JTextField cantidad;
    private javax.swing.JButton cargarProd;
    private javax.swing.JButton eliminar;
    private javax.swing.JButton jBNuePedido;
    public javax.swing.JButton jBcobrar;
    private javax.swing.JButton jBguardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nmesa;
    public javax.swing.JPanel panel1;
    public javax.swing.JPanel panel2;
    private javax.swing.JComboBox<String> productos;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField total;
    // End of variables declaration//GEN-END:variables

    private void armarCabecera() {
        modelo.addColumn("Productos");
        modelo.addColumn("Cantidad");
        modelo.addColumn("Sub Total");

        tabla.setModel(modelo);
    }

    private void cargarMeseros() {
        EmpleadoD ed = new EmpleadoD();

        for (Empleado e : ed.listarEmpleados()) {

            if (e.isEstado() == true) {
                camarero.addItem(e.getNombre_apellido());
            }
        }
    }

    private void cargarProductos() {
        ProductoD pd = new ProductoD();

        for (Producto p : pd.listarProductos()) {

            if (p.isEstado() == true) {
                productos.addItem(p.getNombre());
            }
        }
    }

    //carga las mesas que ya estan credas en la base de datos en el panel:
    private void cargarMesas() {

        MesaD md = new MesaD();

        ArrayList<Mesa> mesas = (ArrayList<Mesa>) md.listarMesas();

        for (Mesa m : mesas) {

            JButton boton = new JButton();

            boton.setName(m.getNumeroMesa() + "");

            boton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Mesa.jpeg")));
            boton.setText(boton.getName());

            boton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    panel2.setVisible(true);
                    nmesa.setText(boton.getName());
                }
            });

            panel1.add(boton);
            panel1.updateUI();

        }
    }


private void borrarTabla(){
    
    int filas = tabla.getRowCount()-1;
    
    for(; filas>=0;filas--){
        
        modelo.removeRow(filas);
    }
    
    
    
}


}